// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using paymatesapi.Contexts;

#nullable disable

namespace paymatesapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231030225839_Transactions")]
    partial class Transactions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("paymatesapi.Entities.Friend", b =>
                {
                    b.Property<string>("FriendOneUid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FriendTwoUid")
                        .HasColumnType("varchar(255)");

                    b.HasKey("FriendOneUid", "FriendTwoUid");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("paymatesapi.Entities.Transaction", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreditorUid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DebtorUid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FriendPairFriendOneUid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FriendPairFriendTwoUid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Uid");

                    b.HasIndex("FriendPairFriendOneUid", "FriendPairFriendTwoUid");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("paymatesapi.Entities.User", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Uid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("paymatesapi.Entities.Transaction", b =>
                {
                    b.HasOne("paymatesapi.Entities.Friend", "FriendPair")
                        .WithMany("Transactions")
                        .HasForeignKey("FriendPairFriendOneUid", "FriendPairFriendTwoUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendPair");
                });

            modelBuilder.Entity("paymatesapi.Entities.Friend", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
